#+TITLE: Automate the boring stuff with Babashka
* Clojure Programming Basics
** Babashka Basics
Programs, Scripts, Pods, and Libs
Babashka can be launched for interactive programming (REPL)
#+begin_src
bb --nrepl-server
bb --socket-server
#+end_src 
** Data Structures
int, double
Vectors, Lists, Sets and Maps(Dictionaries)
Strings, RegExp
** Flow Control
*** if(When), While
*** Map, Reduce
*** doseq, dotimes
#+begin_src clojure
  (doseq [n (range 5)]
    (println (str "Line " n)))
#+end_src
*** repeat, iterate, cycle

#+begin_src clojure
  (take 5 (repeat "Hello"))
  (zipmap [:score :hits :friends :level :energy :boost] (repeat 0))
  ;; repeatedly to generate a sequence of vals
  (take 10 (repeatedly (partial rand-int 100)))
#+end_src

Iterate

#+begin_src clojure
  ;; simple
  (take 3 (iterate inc 5))
  ;; slightly complex
  (defn savings [principal yearly-rate]
    (let [monthly-rate (+ 1 (/ yearly-rate 12))]
      (iterate (fn [p] (* p monthly-rate)) principal)))
  (take 13 (savings 1000 0.01))
#+end_src

#+begin_src clojure
(take 5 (cycle ["a" "b"]))
#+end_src
*** For
*** Loop/Recur
*** Lazy sequences and doall

** Functions

** Metaprogramming with Macros
** Parallel and Concurrent programming
*** Data parallel with pmap



** Distributed Programming
* Automating Tasks
** Pattern Matching with RegExp
** Input Validation
** Organizing Files
** Web Scraping
** Working with Excel
** Working with Google Sheets
** Working with PDF and Word Documents
** Working with CSV and JSON
** Keeping time, Scheduling Tasks, and Launching programs
** Sending Email and Text Messages
** Manipulating Images
** VIdeo Editing with ffmpeg
** GUI Automation
